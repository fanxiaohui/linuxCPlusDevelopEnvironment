CMake 构建定义我们的C++ for linux工程 目录结构准备
我们准备用CMake 构建定义我们的C++ for linux工程

因此我们需要 开始开发时 

准备几个目录


第一 

	CPlusBuild目录  用于外部构建 生成中间件

	DOC 目录  用于存储项目开发文档

	SRC 目录  用于 真正的源码 开发 代码在这里

第二 在工程目录添加文本文件

	COPYRIGHT README

	用于 版权声明 与 使用说明

	也可 忽略第二步

第三  在工程目录添加 run.sh脚本 用来调用 	
		编译生成后的命令

	也可暂时 搁置 关键 我们看如何写CMakeList 文件

	并最终 生成我们的可执行程序  至于调用脚本 可以暂时不考虑

第四 我们之前的源码 main.c 是在工程根目录下
	
	cd 到工程目录 查看路径
	macserver:TestCPlus admindyn$ pwd
	/Users/admindyn/Desktop/TestCPlus

工程目录文档结构

macserver:TestCPlus admindyn$ ls -la
total 64

drwxr-xr-x  10 admindyn  staff   340  2 27 10:13 .

drwx------+ 43 admindyn  staff  1462  2 27 09:05 ..

-rw-r--r--@  1 admindyn  staff  8196  2 27 10:18 .DS_Store

-rw-r--r--@  1 admindyn  staff   836  2 27 10:18 CMake 构建定义我们的C++ for linux工程 目录结构准备

-rw-r--r--@  1 admindyn  staff  8070  2 27 10:06 CMakeList 开发 基本的 语法规则

-rw-r--r--@  1 admindyn  staff   228  2 27 09:30 CMakeLists.txt

drwxr-xr-x   6 admindyn  staff   204  2 27 10:10 CPlusBuild

drwxr-xr-x   3 admindyn  staff   102  2 27 10:09 DOC

drwxr-xr-x   2 admindyn  staff    68  2 27 09:22 SRC

-rw-r--r--@  1 admindyn  staff   127  2 27 09:25 main.c
macserver:TestCPlus admindyn$ 


     现在 我们将main.c 移动到 SRC目录下


第五 由于我们工程有了源码子目录src

	在工程根目录下的CMakeLists 需要修改

	同时为子目录 到子目录下 新建CMakeLists 文件包

	





